name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Bandit (Python SAST)
        run: |
          pip install bandit
          bandit -r apps -x apps/tests

      - name: Dependency Scan with Safety
        run: |
          pip install "safety==2.3.5"
          safety check -r requirements.txt

  test:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - run: pip install -r requirements.txt
      - run: pytest apps/tests --maxfail=1 --disable-warnings -q

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: apps/Dockerfile
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/ebryx-flask:${{ github.sha }} -f apps/Dockerfile .
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/ebryx-flask:${{ github.sha }}
          exit-code: "1"
          severity: "HIGH,CRITICAL"

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Push Docker image
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/ebryx-flask:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/ebryx-flask:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/ebryx-flask:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/ebryx-flask:latest          

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set up kubectl
  #       uses: azure/setup-kubectl@v3
  #       with:
  #         version: latest

  #     - name: Set up Helm
  #       uses: azure/setup-helm@v3
  #       with:
  #         version: v3.12.0

  #     - name: Add SSH key
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_ed25519
  #         chmod 600 ~/.ssh/id_ed25519
  #         ssh-keyscan -H 192.168.18.57 >> ~/.ssh/known_hosts

  #     - name: Test SSH
  #       run: ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no centos@192.168.18.57 "echo SSH works"

  #     - name: Set the Kubernetes context
  #       uses: azure/k8s-set-context@v4
  #       with:
  #         method: service-account
  #         k8s-url: ${{ secrets.KUBERNETES_URL }}
  #         k8s-secret: ${{ secrets.KUBERNETES_SECRET }}

  #     - name: Deploy with Helm
  #       run: |
  #         helm upgrade --install ebryx-flask ./helm \
  #           --set image.repository=${{ secrets.DOCKERHUB_USERNAME }}/ebryx-flask \
  #           --set image.tag=${{ github.sha }}
  #       shell: bash
